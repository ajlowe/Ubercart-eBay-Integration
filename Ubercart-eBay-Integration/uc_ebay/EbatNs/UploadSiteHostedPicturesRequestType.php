<?php
// autogenerated file 30.06.2008 14:46
// $Id: $
// $Log: $
//
//
require_once 'PictureUploadPolicyCodeType.php';
require_once 'Base64BinaryType.php';
require_once 'PictureSetCodeType.php';
require_once 'AbstractRequestType.php';

/**
 * Uploads a picture to EPS (eBay Picture Services) by including a binary 
 * attachment.This call is available only in the XML API (not in the SOAP API).This 
 * call requires that you use HTTP version 1.0.<br><br>This call will only be 
 * successful if a binary attachment is included,after the XML input, as part of 
 * the request.<br><br>If you want to use this call as part of the My Picture 
 * Uploads feature,see <a 
 * href="#Request.PictureUploadPolicy">PictureUploadPolicy</a>.<br><br>Please see 
 * <a 
 * href="https://ebay.custhelp.com/cgi-bin/ebay.cfg/php/enduser/std_adp.php?p_faqid=1063" 
 * target="_blank">FAQs on eBayPictureServices (EPS) and the 
 * UploadSiteHostedPictures API call</a> and see samples at the following 
 * locations:<br><br><a 
 * href="https://ebay.custhelp.com/cgi-bin/ebay.cfg/php/enduser/std_adp.php?p_faqid=1050" 
 * target="_blank">Java sample for UploadSiteHostedPictures</a><br><br><a 
 * href="https://ebay.custhelp.com/cgi-bin/ebay.cfg/php/enduser/std_adp.php?p_faqid=1093" 
 * target="_blank">.NET sample in C# for UploadSiteHostedPictures</a><br><br><a 
 * href="https://ebay.custhelp.com/cgi-bin/ebay.cfg/php/enduser/std_adp.php?p_faqid=1092" 
 * target="_blank"> PHP sample for UploadSiteHostedPictures</a><br><br><a 
 * href="http://ebay.custhelp.com/cgi-bin/ebay.cfg/php/enduser/std_adp.php?p_faqid=1116" 
 * target="_blank"> VB6 sample for UploadSiteHostedPictures</a><br><br>The binary 
 * attachment is image data, including headers,from a JPG, GIF, PNG, BMP, or TIF 
 * format image file.JPG is recommended. If you use, for example, PNG, it will be 
 * converted to JPG (or GIF) format. <br><br>The binary attachment must be sent 
 * afterthe XML input as a MIME attachment,in the same POST request.<br><br>The 
 * only necessary call-specific input is an attachment of a picture.An EPS (eBay 
 * Picture Services) URL is returned for the picture, in 
 * SiteHostedPictureDetails.FullURL. The value inSiteHostedPictureDetails.FullURL 
 * must be storedby your application (for use by AddItem, ReviseItem, or RelistItem 
 * in the Item.PictureDetails.PictureURL field)because no API call is available for 
 * finding aURL of an uploaded, unassociated picture.<br><br>That is, your 
 * application uses the value in SiteHostedPictureDetails.FullURL toassociate the 
 * picture with an item (using Item.PictureDetails.PictureURL in AddItem, 
 * ReviseItem, or RelistItem).This must be done within 48 hours; unassociated 
 * picturesare automatically deleted after that period.<br><br>The maximum picture 
 * size is 4 MB.EPS downscales and compresses the picture to store it at the 
 * different sizes in the imageset.For good quality results, the recommended 
 * minimum dimensions of the uploaded pictureare at least 1000 pixels on the longer 
 * side. Recommended JPG quality is 90 or greater.The file size of images meeting 
 * these minimum requirements is 200KB-400KB.Larger dimensions and file sizes will 
 * not typically provide better qualityin the final images processed by 
 * EPS.<br><br>If the dimensions of an uploaded picture are less than a size that 
 * is stored in EPS,the upload will be accepted (without warning) and the stored 
 * picturewill be the same dimensions as the uploaded picture.In this case, image 
 * quality of the stored picture is likely to be degraded.<br><br>If end-users use 
 * image processing editors or utilities to preparepictures for upload (e.g., crop, 
 * rotates, brightness correction, etc.),they should avoid use of Save for the Web 
 * commands or options to saveoutput since these will cause reduced image quality 
 * after the uploadedpictures are processed by EPS. They should use the standard 
 * Save command instead.<br><br>EPS supports upload of image data in JPG, GIF, PNG, 
 * BMP, and TIF formats.Other image formats, such as PSD, will result in an 
 * error.Successfully processed uploads for item pictures are storedin EPS in JPG 
 * format, at sizes and compression settings designedto provide the best trade-off 
 * between image quality and page-load times.<br><br>If the API request specifies a 
 * Supersize imageset and the response confirmsthat a Supersize or Large imageset 
 * was created, then the AddItem,ReviseItem, or RelistItem call must specify 
 * Supersize or PicturePackas the PhotoDisplayType. In the case of ReviseItem, if 
 * there are existingpictures for a listing, it is not possible to change the 
 * PhotoDisplayTypefrom Normal to Supersize or PicturePack. 
 *
 * @link http://developer.ebay.com/DevZone/XML/docs/Reference/eBay/types/UploadSiteHostedPicturesRequestType.html
 *
 */
class UploadSiteHostedPicturesRequestType extends AbstractRequestType
{
	/**
	 * @var string
	 */
	protected $PictureName;
	/**
	 * @var int
	 */
	protected $PictureSystemVersion;
	/**
	 * @var PictureSetCodeType
	 */
	protected $PictureSet;
	/**
	 * @var Base64BinaryType
	 */
	protected $PictureData;
	/**
	 * @var PictureUploadPolicyCodeType
	 */
	protected $PictureUploadPolicy;

	/**
	 * @return string
	 */
	function getPictureName()
	{
		return $this->PictureName;
	}
	/**
	 * @return void
	 * @param string $value 
	 */
	function setPictureName($value)
	{
		$this->PictureName = $value;
	}
	/**
	 * @return int
	 */
	function getPictureSystemVersion()
	{
		return $this->PictureSystemVersion;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setPictureSystemVersion($value)
	{
		$this->PictureSystemVersion = $value;
	}
	/**
	 * @return PictureSetCodeType
	 */
	function getPictureSet()
	{
		return $this->PictureSet;
	}
	/**
	 * @return void
	 * @param PictureSetCodeType $value 
	 */
	function setPictureSet($value)
	{
		$this->PictureSet = $value;
	}
	/**
	 * @return Base64BinaryType
	 */
	function getPictureData()
	{
		return $this->PictureData;
	}
	/**
	 * @return void
	 * @param Base64BinaryType $value 
	 */
	function setPictureData($value)
	{
		$this->PictureData = $value;
	}
	/**
	 * @return PictureUploadPolicyCodeType
	 */
	function getPictureUploadPolicy()
	{
		return $this->PictureUploadPolicy;
	}
	/**
	 * @return void
	 * @param PictureUploadPolicyCodeType $value 
	 */
	function setPictureUploadPolicy($value)
	{
		$this->PictureUploadPolicy = $value;
	}
	/**
	 * @return 
	 */
	function __construct()
	{
		parent::__construct('UploadSiteHostedPicturesRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'PictureName' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'PictureSystemVersion' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'PictureSet' =>
				array(
					'required' => false,
					'type' => 'PictureSetCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'PictureData' =>
				array(
					'required' => false,
					'type' => 'Base64BinaryType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'PictureUploadPolicy' =>
				array(
					'required' => false,
					'type' => 'PictureUploadPolicyCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
