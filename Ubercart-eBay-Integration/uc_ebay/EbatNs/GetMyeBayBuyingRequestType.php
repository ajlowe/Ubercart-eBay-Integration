<?php
// autogenerated file 30.06.2008 14:46
// $Id: $
// $Log: $
//
//
require_once 'ItemListCustomizationType.php';
require_once 'MyeBaySelectionType.php';
require_once 'BidAssistantListType.php';
require_once 'AbstractRequestType.php';

/**
 * Returns items from the All Buying section of the user's My eBayaccount, 
 * including items the user is watching, bidding on, haswon, has not won, or has 
 * made best offers on.<br /><br />A DetailLevel of ReturnSummary returns only the 
 * BuyingSummaryand the specific container(s) requested (by adding an Include 
 * valueof true for each container you want to include in the response).<br /><br 
 * />A DetailLevel of ReturnAll returns the BuyingSummary and allother containers 
 * that do not contain the Include tag. Any containersthat have an Include value 
 * specified will not be returned with theresponse. 
 *
 * @link http://developer.ebay.com/DevZone/XML/docs/Reference/eBay/types/GetMyeBayBuyingRequestType.html
 *
 */
class GetMyeBayBuyingRequestType extends AbstractRequestType
{
	/**
	 * @var ItemListCustomizationType
	 */
	protected $WatchList;
	/**
	 * @var ItemListCustomizationType
	 */
	protected $BidList;
	/**
	 * @var ItemListCustomizationType
	 */
	protected $BestOfferList;
	/**
	 * @var ItemListCustomizationType
	 */
	protected $WonList;
	/**
	 * @var ItemListCustomizationType
	 */
	protected $LostList;
	/**
	 * @var MyeBaySelectionType
	 */
	protected $FavoriteSearches;
	/**
	 * @var MyeBaySelectionType
	 */
	protected $FavoriteSellers;
	/**
	 * @var MyeBaySelectionType
	 */
	protected $SecondChanceOffer;
	/**
	 * @var BidAssistantListType
	 */
	protected $BidAssistantList;

	/**
	 * @return ItemListCustomizationType
	 */
	function getWatchList()
	{
		return $this->WatchList;
	}
	/**
	 * @return void
	 * @param ItemListCustomizationType $value 
	 */
	function setWatchList($value)
	{
		$this->WatchList = $value;
	}
	/**
	 * @return ItemListCustomizationType
	 */
	function getBidList()
	{
		return $this->BidList;
	}
	/**
	 * @return void
	 * @param ItemListCustomizationType $value 
	 */
	function setBidList($value)
	{
		$this->BidList = $value;
	}
	/**
	 * @return ItemListCustomizationType
	 */
	function getBestOfferList()
	{
		return $this->BestOfferList;
	}
	/**
	 * @return void
	 * @param ItemListCustomizationType $value 
	 */
	function setBestOfferList($value)
	{
		$this->BestOfferList = $value;
	}
	/**
	 * @return ItemListCustomizationType
	 */
	function getWonList()
	{
		return $this->WonList;
	}
	/**
	 * @return void
	 * @param ItemListCustomizationType $value 
	 */
	function setWonList($value)
	{
		$this->WonList = $value;
	}
	/**
	 * @return ItemListCustomizationType
	 */
	function getLostList()
	{
		return $this->LostList;
	}
	/**
	 * @return void
	 * @param ItemListCustomizationType $value 
	 */
	function setLostList($value)
	{
		$this->LostList = $value;
	}
	/**
	 * @return MyeBaySelectionType
	 */
	function getFavoriteSearches()
	{
		return $this->FavoriteSearches;
	}
	/**
	 * @return void
	 * @param MyeBaySelectionType $value 
	 */
	function setFavoriteSearches($value)
	{
		$this->FavoriteSearches = $value;
	}
	/**
	 * @return MyeBaySelectionType
	 */
	function getFavoriteSellers()
	{
		return $this->FavoriteSellers;
	}
	/**
	 * @return void
	 * @param MyeBaySelectionType $value 
	 */
	function setFavoriteSellers($value)
	{
		$this->FavoriteSellers = $value;
	}
	/**
	 * @return MyeBaySelectionType
	 */
	function getSecondChanceOffer()
	{
		return $this->SecondChanceOffer;
	}
	/**
	 * @return void
	 * @param MyeBaySelectionType $value 
	 */
	function setSecondChanceOffer($value)
	{
		$this->SecondChanceOffer = $value;
	}
	/**
	 * @return BidAssistantListType
	 */
	function getBidAssistantList()
	{
		return $this->BidAssistantList;
	}
	/**
	 * @return void
	 * @param BidAssistantListType $value 
	 */
	function setBidAssistantList($value)
	{
		$this->BidAssistantList = $value;
	}
	/**
	 * @return 
	 */
	function __construct()
	{
		parent::__construct('GetMyeBayBuyingRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'WatchList' =>
				array(
					'required' => false,
					'type' => 'ItemListCustomizationType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'BidList' =>
				array(
					'required' => false,
					'type' => 'ItemListCustomizationType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'BestOfferList' =>
				array(
					'required' => false,
					'type' => 'ItemListCustomizationType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'WonList' =>
				array(
					'required' => false,
					'type' => 'ItemListCustomizationType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'LostList' =>
				array(
					'required' => false,
					'type' => 'ItemListCustomizationType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'FavoriteSearches' =>
				array(
					'required' => false,
					'type' => 'MyeBaySelectionType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'FavoriteSellers' =>
				array(
					'required' => false,
					'type' => 'MyeBaySelectionType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SecondChanceOffer' =>
				array(
					'required' => false,
					'type' => 'MyeBaySelectionType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'BidAssistantList' =>
				array(
					'required' => false,
					'type' => 'BidAssistantListType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
