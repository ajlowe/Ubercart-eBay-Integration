<?php
// autogenerated file 30.06.2008 14:46
// $Id: $
// $Log: $
//
//
require_once 'BestOfferIDType.php';
require_once 'BestOfferStatusCodeType.php';
require_once 'AbstractRequestType.php';
require_once 'ItemIDType.php';

/**
 * Retrieves the best offers associated with an ItemID, according to 
 * theBestOfferStatus filter, where Active is the default value. You can specify a 
 * best offer ID to retrieve the details for a specific best offer.A buyer can use 
 * GetBestOffers to see the buyer's best offer (BestOfferID, etc.)and the current 
 * state of the best offer (e.g., whether the seller has made a counter offer). 
 *
 * @link http://developer.ebay.com/DevZone/XML/docs/Reference/eBay/types/GetBestOffersRequestType.html
 *
 */
class GetBestOffersRequestType extends AbstractRequestType
{
	/**
	 * @var ItemIDType
	 */
	protected $ItemID;
	/**
	 * @var BestOfferIDType
	 */
	protected $BestOfferID;
	/**
	 * @var BestOfferStatusCodeType
	 */
	protected $BestOfferStatus;

	/**
	 * @return ItemIDType
	 */
	function getItemID()
	{
		return $this->ItemID;
	}
	/**
	 * @return void
	 * @param ItemIDType $value 
	 */
	function setItemID($value)
	{
		$this->ItemID = $value;
	}
	/**
	 * @return BestOfferIDType
	 */
	function getBestOfferID()
	{
		return $this->BestOfferID;
	}
	/**
	 * @return void
	 * @param BestOfferIDType $value 
	 */
	function setBestOfferID($value)
	{
		$this->BestOfferID = $value;
	}
	/**
	 * @return BestOfferStatusCodeType
	 */
	function getBestOfferStatus()
	{
		return $this->BestOfferStatus;
	}
	/**
	 * @return void
	 * @param BestOfferStatusCodeType $value 
	 */
	function setBestOfferStatus($value)
	{
		$this->BestOfferStatus = $value;
	}
	/**
	 * @return 
	 */
	function __construct()
	{
		parent::__construct('GetBestOffersRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'ItemID' =>
				array(
					'required' => false,
					'type' => 'ItemIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'BestOfferID' =>
				array(
					'required' => false,
					'type' => 'BestOfferIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'BestOfferStatus' =>
				array(
					'required' => false,
					'type' => 'BestOfferStatusCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
