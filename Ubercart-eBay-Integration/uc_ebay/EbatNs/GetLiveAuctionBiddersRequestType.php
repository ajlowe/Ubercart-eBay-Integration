<?php
// autogenerated file 30.06.2008 14:46
// $Id: $
// $Log: $
//
//
require_once 'BidderStatusCodeType.php';
require_once 'PaginationType.php';
require_once 'AbstractRequestType.php';

/**
 * Includes the list of bidders for the requested catalog. 
 *
 * @link http://developer.ebay.com/DevZone/XML/docs/Reference/eBay/types/GetLiveAuctionBiddersRequestType.html
 *
 */
class GetLiveAuctionBiddersRequestType extends AbstractRequestType
{
	/**
	 * @var int
	 */
	protected $UserCatalogID;
	/**
	 * @var BidderStatusCodeType
	 */
	protected $BidderStatus;
	/**
	 * @var PaginationType
	 */
	protected $Pagination;

	/**
	 * @return int
	 */
	function getUserCatalogID()
	{
		return $this->UserCatalogID;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setUserCatalogID($value)
	{
		$this->UserCatalogID = $value;
	}
	/**
	 * @return BidderStatusCodeType
	 * @param integer $index 
	 */
	function getBidderStatus($index = null)
	{
		if ($index !== null) {
			return $this->BidderStatus[$index];
		} else {
			return $this->BidderStatus;
		}
	}
	/**
	 * @return void
	 * @param BidderStatusCodeType $value 
	 * @param  $index 
	 */
	function setBidderStatus($value, $index = null)
	{
		if ($index !== null) {
			$this->BidderStatus[$index] = $value;
		} else {
			$this->BidderStatus = $value;
		}
	}
	/**
	 * @return void
	 * @param BidderStatusCodeType $value 
	 */
	function addBidderStatus($value)
	{
		$this->BidderStatus[] = $value;
	}
	/**
	 * @return PaginationType
	 */
	function getPagination()
	{
		return $this->Pagination;
	}
	/**
	 * @return void
	 * @param PaginationType $value 
	 */
	function setPagination($value)
	{
		$this->Pagination = $value;
	}
	/**
	 * @return 
	 */
	function __construct()
	{
		parent::__construct('GetLiveAuctionBiddersRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'UserCatalogID' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'BidderStatus' =>
				array(
					'required' => false,
					'type' => 'BidderStatusCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => true,
					'cardinality' => '0..*'
				),
				'Pagination' =>
				array(
					'required' => false,
					'type' => 'PaginationType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
