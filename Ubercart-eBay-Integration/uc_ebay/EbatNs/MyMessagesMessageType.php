<?php
// autogenerated file 30.06.2008 14:46
// $Id: $
// $Log: $
//
//
require_once 'MyMessagesFolderType.php';
require_once 'EbatNs_ComplexType.php';
require_once 'MyMessagesMessageIDType.php';
require_once 'MyMessagesResponseDetailsType.php';
require_once 'MyMessagesForwardDetailsType.php';
require_once 'ItemIDType.php';

/**
 * Contains the message information for each message specified inMessageIDs. The 
 * amount and type of information returned varies based onthe requested detail 
 * level. 
 *
 * @link http://developer.ebay.com/DevZone/XML/docs/Reference/eBay/types/MyMessagesMessageType.html
 *
 */
class MyMessagesMessageType extends EbatNs_ComplexType
{
	/**
	 * @var string
	 */
	protected $Sender;
	/**
	 * @var string
	 */
	protected $RecipientUserID;
	/**
	 * @var string
	 */
	protected $SendToName;
	/**
	 * @var string
	 */
	protected $Subject;
	/**
	 * @var MyMessagesMessageIDType
	 */
	protected $MessageID;
	/**
	 * @var string
	 */
	protected $ExternalMessageID;
	/**
	 * @var string
	 */
	protected $ContentType;
	/**
	 * @var string
	 */
	protected $Text;
	/**
	 * @var boolean
	 */
	protected $Flagged;
	/**
	 * @var boolean
	 */
	protected $Read;
	/**
	 * @var dateTime
	 */
	protected $CreationDate;
	/**
	 * @var dateTime
	 */
	protected $ReceiveDate;
	/**
	 * @var dateTime
	 */
	protected $ExpirationDate;
	/**
	 * @var ItemIDType
	 */
	protected $ItemID;
	/**
	 * @var MyMessagesResponseDetailsType
	 */
	protected $ResponseDetails;
	/**
	 * @var MyMessagesForwardDetailsType
	 */
	protected $ForwardDetails;
	/**
	 * @var MyMessagesFolderType
	 */
	protected $Folder;

	/**
	 * @return string
	 */
	function getSender()
	{
		return $this->Sender;
	}
	/**
	 * @return void
	 * @param string $value 
	 */
	function setSender($value)
	{
		$this->Sender = $value;
	}
	/**
	 * @return string
	 */
	function getRecipientUserID()
	{
		return $this->RecipientUserID;
	}
	/**
	 * @return void
	 * @param string $value 
	 */
	function setRecipientUserID($value)
	{
		$this->RecipientUserID = $value;
	}
	/**
	 * @return string
	 */
	function getSendToName()
	{
		return $this->SendToName;
	}
	/**
	 * @return void
	 * @param string $value 
	 */
	function setSendToName($value)
	{
		$this->SendToName = $value;
	}
	/**
	 * @return string
	 */
	function getSubject()
	{
		return $this->Subject;
	}
	/**
	 * @return void
	 * @param string $value 
	 */
	function setSubject($value)
	{
		$this->Subject = $value;
	}
	/**
	 * @return MyMessagesMessageIDType
	 */
	function getMessageID()
	{
		return $this->MessageID;
	}
	/**
	 * @return void
	 * @param MyMessagesMessageIDType $value 
	 */
	function setMessageID($value)
	{
		$this->MessageID = $value;
	}
	/**
	 * @return string
	 */
	function getExternalMessageID()
	{
		return $this->ExternalMessageID;
	}
	/**
	 * @return void
	 * @param string $value 
	 */
	function setExternalMessageID($value)
	{
		$this->ExternalMessageID = $value;
	}
	/**
	 * @return string
	 */
	function getContentType()
	{
		return $this->ContentType;
	}
	/**
	 * @return void
	 * @param string $value 
	 */
	function setContentType($value)
	{
		$this->ContentType = $value;
	}
	/**
	 * @return string
	 */
	function getText()
	{
		return $this->Text;
	}
	/**
	 * @return void
	 * @param string $value 
	 */
	function setText($value)
	{
		$this->Text = $value;
	}
	/**
	 * @return boolean
	 */
	function getFlagged()
	{
		return $this->Flagged;
	}
	/**
	 * @return void
	 * @param boolean $value 
	 */
	function setFlagged($value)
	{
		$this->Flagged = $value;
	}
	/**
	 * @return boolean
	 */
	function getRead()
	{
		return $this->Read;
	}
	/**
	 * @return void
	 * @param boolean $value 
	 */
	function setRead($value)
	{
		$this->Read = $value;
	}
	/**
	 * @return dateTime
	 */
	function getCreationDate()
	{
		return $this->CreationDate;
	}
	/**
	 * @return void
	 * @param dateTime $value 
	 */
	function setCreationDate($value)
	{
		$this->CreationDate = $value;
	}
	/**
	 * @return dateTime
	 */
	function getReceiveDate()
	{
		return $this->ReceiveDate;
	}
	/**
	 * @return void
	 * @param dateTime $value 
	 */
	function setReceiveDate($value)
	{
		$this->ReceiveDate = $value;
	}
	/**
	 * @return dateTime
	 */
	function getExpirationDate()
	{
		return $this->ExpirationDate;
	}
	/**
	 * @return void
	 * @param dateTime $value 
	 */
	function setExpirationDate($value)
	{
		$this->ExpirationDate = $value;
	}
	/**
	 * @return ItemIDType
	 */
	function getItemID()
	{
		return $this->ItemID;
	}
	/**
	 * @return void
	 * @param ItemIDType $value 
	 */
	function setItemID($value)
	{
		$this->ItemID = $value;
	}
	/**
	 * @return MyMessagesResponseDetailsType
	 */
	function getResponseDetails()
	{
		return $this->ResponseDetails;
	}
	/**
	 * @return void
	 * @param MyMessagesResponseDetailsType $value 
	 */
	function setResponseDetails($value)
	{
		$this->ResponseDetails = $value;
	}
	/**
	 * @return MyMessagesForwardDetailsType
	 */
	function getForwardDetails()
	{
		return $this->ForwardDetails;
	}
	/**
	 * @return void
	 * @param MyMessagesForwardDetailsType $value 
	 */
	function setForwardDetails($value)
	{
		$this->ForwardDetails = $value;
	}
	/**
	 * @return MyMessagesFolderType
	 */
	function getFolder()
	{
		return $this->Folder;
	}
	/**
	 * @return void
	 * @param MyMessagesFolderType $value 
	 */
	function setFolder($value)
	{
		$this->Folder = $value;
	}
	/**
	 * @return 
	 */
	function __construct()
	{
		parent::__construct('MyMessagesMessageType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'Sender' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'RecipientUserID' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SendToName' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Subject' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'MessageID' =>
				array(
					'required' => false,
					'type' => 'MyMessagesMessageIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ExternalMessageID' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ContentType' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Text' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Flagged' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Read' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'CreationDate' =>
				array(
					'required' => false,
					'type' => 'dateTime',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ReceiveDate' =>
				array(
					'required' => false,
					'type' => 'dateTime',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ExpirationDate' =>
				array(
					'required' => false,
					'type' => 'dateTime',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ItemID' =>
				array(
					'required' => false,
					'type' => 'ItemIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ResponseDetails' =>
				array(
					'required' => false,
					'type' => 'MyMessagesResponseDetailsType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ForwardDetails' =>
				array(
					'required' => false,
					'type' => 'MyMessagesForwardDetailsType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Folder' =>
				array(
					'required' => false,
					'type' => 'MyMessagesFolderType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
