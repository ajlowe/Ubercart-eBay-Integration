<?php
// autogenerated file 30.06.2008 14:46
// $Id: $
// $Log: $
//
//
require_once 'ItemArrayType.php';
require_once 'DomainHistogramType.php';
require_once 'ProductArrayType.php';
require_once 'AbstractResponseType.php';

/**
 * The GetSearchResultsExpress response contains the listings that match the query 
 * orID specified in the request, related eBay catalog product information, and 
 * ahistogram showing the the quantity (count) of matching items in 
 * Expressdepartments, aisles, and product types. The results may be limited by 
 * filters thatwere specified in the request. 
 *
 * @link http://developer.ebay.com/DevZone/XML/docs/Reference/eBay/types/GetSearchResultsExpressResponseType.html
 *
 */
class GetSearchResultsExpressResponseType extends AbstractResponseType
{
	/**
	 * @var DomainHistogramType
	 */
	protected $Histogram;
	/**
	 * @var ItemArrayType
	 */
	protected $ItemArray;
	/**
	 * @var ProductArrayType
	 */
	protected $ProductArray;
	/**
	 * @var int
	 */
	protected $EntriesPerPage;
	/**
	 * @var int
	 */
	protected $PageNumber;
	/**
	 * @var boolean
	 */
	protected $HasMoreEntries;

	/**
	 * @return DomainHistogramType
	 */
	function getHistogram()
	{
		return $this->Histogram;
	}
	/**
	 * @return void
	 * @param DomainHistogramType $value 
	 */
	function setHistogram($value)
	{
		$this->Histogram = $value;
	}
	/**
	 * @return ItemArrayType
	 */
	function getItemArray()
	{
		return $this->ItemArray;
	}
	/**
	 * @return void
	 * @param ItemArrayType $value 
	 */
	function setItemArray($value)
	{
		$this->ItemArray = $value;
	}
	/**
	 * @return ProductArrayType
	 */
	function getProductArray()
	{
		return $this->ProductArray;
	}
	/**
	 * @return void
	 * @param ProductArrayType $value 
	 */
	function setProductArray($value)
	{
		$this->ProductArray = $value;
	}
	/**
	 * @return int
	 */
	function getEntriesPerPage()
	{
		return $this->EntriesPerPage;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setEntriesPerPage($value)
	{
		$this->EntriesPerPage = $value;
	}
	/**
	 * @return int
	 */
	function getPageNumber()
	{
		return $this->PageNumber;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setPageNumber($value)
	{
		$this->PageNumber = $value;
	}
	/**
	 * @return boolean
	 */
	function getHasMoreEntries()
	{
		return $this->HasMoreEntries;
	}
	/**
	 * @return void
	 * @param boolean $value 
	 */
	function setHasMoreEntries($value)
	{
		$this->HasMoreEntries = $value;
	}
	/**
	 * @return 
	 */
	function __construct()
	{
		parent::__construct('GetSearchResultsExpressResponseType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'Histogram' =>
				array(
					'required' => false,
					'type' => 'DomainHistogramType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ItemArray' =>
				array(
					'required' => false,
					'type' => 'ItemArrayType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ProductArray' =>
				array(
					'required' => false,
					'type' => 'ProductArrayType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'EntriesPerPage' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'PageNumber' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'HasMoreEntries' =>
				array(
					'required' => true,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '1..1'
				)
			));

	}
}
?>
