<?php
// autogenerated file 30.06.2008 14:46
// $Id: $
// $Log: $
//
//
require_once 'EbatNs_ComplexType.php';
require_once 'AmountType.php';

/**
 * Returned if the user is a Selling ManagerPro user. 
 *
 * @link http://developer.ebay.com/DevZone/XML/docs/Reference/eBay/types/SellingManagerProductDetailsType.html
 *
 */
class SellingManagerProductDetailsType extends EbatNs_ComplexType
{
	/**
	 * @var string
	 */
	protected $ProductName;
	/**
	 * @var int
	 */
	protected $PartNumber;
	/**
	 * @var string
	 */
	protected $ProductPartNumber;
	/**
	 * @var string
	 */
	protected $ProductID;
	/**
	 * @var string
	 */
	protected $CustomLabel;
	/**
	 * @var int
	 */
	protected $QuantityAvailable;
	/**
	 * @var AmountType
	 */
	protected $UnitCost;

	/**
	 * @return string
	 */
	function getProductName()
	{
		return $this->ProductName;
	}
	/**
	 * @return void
	 * @param string $value 
	 */
	function setProductName($value)
	{
		$this->ProductName = $value;
	}
	/**
	 * @return int
	 */
	function getPartNumber()
	{
		return $this->PartNumber;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setPartNumber($value)
	{
		$this->PartNumber = $value;
	}
	/**
	 * @return string
	 */
	function getProductPartNumber()
	{
		return $this->ProductPartNumber;
	}
	/**
	 * @return void
	 * @param string $value 
	 */
	function setProductPartNumber($value)
	{
		$this->ProductPartNumber = $value;
	}
	/**
	 * @return string
	 */
	function getProductID()
	{
		return $this->ProductID;
	}
	/**
	 * @return void
	 * @param string $value 
	 */
	function setProductID($value)
	{
		$this->ProductID = $value;
	}
	/**
	 * @return string
	 */
	function getCustomLabel()
	{
		return $this->CustomLabel;
	}
	/**
	 * @return void
	 * @param string $value 
	 */
	function setCustomLabel($value)
	{
		$this->CustomLabel = $value;
	}
	/**
	 * @return int
	 */
	function getQuantityAvailable()
	{
		return $this->QuantityAvailable;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setQuantityAvailable($value)
	{
		$this->QuantityAvailable = $value;
	}
	/**
	 * @return AmountType
	 */
	function getUnitCost()
	{
		return $this->UnitCost;
	}
	/**
	 * @return void
	 * @param AmountType $value 
	 */
	function setUnitCost($value)
	{
		$this->UnitCost = $value;
	}
	/**
	 * @return 
	 */
	function __construct()
	{
		parent::__construct('SellingManagerProductDetailsType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'ProductName' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'PartNumber' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ProductPartNumber' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ProductID' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'CustomLabel' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'QuantityAvailable' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'UnitCost' =>
				array(
					'required' => false,
					'type' => 'AmountType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
