<?php
// autogenerated file 30.06.2008 14:46
// $Id: $
// $Log: $
//
//
require_once 'BidApprovalArrayType.php';
require_once 'AmountType.php';
require_once 'AbstractRequestType.php';

/**
 * Provides Live Auction sellers with the ability to approve, decline,and set the 
 * bidding limit of the bidders that have signed up for a catalog.Includes the list 
 * of bidders for the requested item as part of thegeneral item listing data. 
 *
 * @link http://developer.ebay.com/DevZone/XML/docs/Reference/eBay/types/ApproveLiveAuctionBiddersRequestType.html
 *
 */
class ApproveLiveAuctionBiddersRequestType extends AbstractRequestType
{
	/**
	 * @var int
	 */
	protected $UserCatalogID;
	/**
	 * @var BidApprovalArrayType
	 */
	protected $BidApproval;
	/**
	 * @var boolean
	 */
	protected $ApproveAllPending;
	/**
	 * @var AmountType
	 */
	protected $AllApprovedBiddingLimit;

	/**
	 * @return int
	 */
	function getUserCatalogID()
	{
		return $this->UserCatalogID;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setUserCatalogID($value)
	{
		$this->UserCatalogID = $value;
	}
	/**
	 * @return BidApprovalArrayType
	 */
	function getBidApproval()
	{
		return $this->BidApproval;
	}
	/**
	 * @return void
	 * @param BidApprovalArrayType $value 
	 */
	function setBidApproval($value)
	{
		$this->BidApproval = $value;
	}
	/**
	 * @return boolean
	 */
	function getApproveAllPending()
	{
		return $this->ApproveAllPending;
	}
	/**
	 * @return void
	 * @param boolean $value 
	 */
	function setApproveAllPending($value)
	{
		$this->ApproveAllPending = $value;
	}
	/**
	 * @return AmountType
	 */
	function getAllApprovedBiddingLimit()
	{
		return $this->AllApprovedBiddingLimit;
	}
	/**
	 * @return void
	 * @param AmountType $value 
	 */
	function setAllApprovedBiddingLimit($value)
	{
		$this->AllApprovedBiddingLimit = $value;
	}
	/**
	 * @return 
	 */
	function __construct()
	{
		parent::__construct('ApproveLiveAuctionBiddersRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'UserCatalogID' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'BidApproval' =>
				array(
					'required' => false,
					'type' => 'BidApprovalArrayType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ApproveAllPending' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'AllApprovedBiddingLimit' =>
				array(
					'required' => false,
					'type' => 'AmountType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
