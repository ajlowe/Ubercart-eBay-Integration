<?php
// autogenerated file 30.06.2008 14:46
// $Id: $
// $Log: $
//
//
require_once 'CategoryItemSpecificsType.php';
require_once 'AbstractResponseType.php';

/**
 * Calls made form seller or buyer find out what the most relevant tags and values 
 * are for a given category 
 *
 * @link http://developer.ebay.com/DevZone/XML/docs/Reference/eBay/types/GetCategorySpecificsResponseType.html
 *
 */
class GetCategorySpecificsResponseType extends AbstractResponseType
{
	/**
	 * @var CategoryItemSpecificsType
	 */
	protected $CategoryItemSpecifics;

	/**
	 * @return CategoryItemSpecificsType
	 * @param integer $index 
	 */
	function getCategoryItemSpecifics($index = null)
	{
		if ($index !== null) {
			return $this->CategoryItemSpecifics[$index];
		} else {
			return $this->CategoryItemSpecifics;
		}
	}
	/**
	 * @return void
	 * @param CategoryItemSpecificsType $value 
	 * @param  $index 
	 */
	function setCategoryItemSpecifics($value, $index = null)
	{
		if ($index !== null) {
			$this->CategoryItemSpecifics[$index] = $value;
		} else {
			$this->CategoryItemSpecifics = $value;
		}
	}
	/**
	 * @return void
	 * @param CategoryItemSpecificsType $value 
	 */
	function addCategoryItemSpecifics($value)
	{
		$this->CategoryItemSpecifics[] = $value;
	}
	/**
	 * @return 
	 */
	function __construct()
	{
		parent::__construct('GetCategorySpecificsResponseType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'CategoryItemSpecifics' =>
				array(
					'required' => false,
					'type' => 'CategoryItemSpecificsType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => true,
					'cardinality' => '0..*'
				)
			));

	}
}
?>
