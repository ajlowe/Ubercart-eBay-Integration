<?php
// autogenerated file 30.06.2008 14:46
// $Id: $
// $Log: $
//
//
require_once 'OfferType.php';
require_once 'AffiliateTrackingDetailsType.php';
require_once 'AbstractRequestType.php';
require_once 'ItemIDType.php';

/**
 * Enables a user to bid (make an offer) on an item or make a best offer.For 
 * competitive-bidding listings(Chinese and Dutch auctions), a user can make a bid. 
 * For fixed-price listings(Basic Fixed-Price and eBay Stores Inventory listings), 
 * a user can purchasean item. A user can make a best offer on an item for which 
 * Best Offer is enabled.For information about the Best Offer feature (including 
 * rules for counteroffers),see <a 
 * href="http://developer.ebay.com/DevZone/XML/docs/WebHelp/index.htm?context=eBay_XML_API&topic=EnablingBestOffer">Enabling 
 * Best Offer</a>.<br><br>For more information about each use of PlaceOffer 
 * (includinginformation about making a best offer or counteroffer, and information 
 * aboutaccepting or declining a counteroffer), please see<a 
 * href="#Request">PlaceOffer Input</a>.<br><br><span 
 * class="tablenote"><b>Important note: Before using this call, please carefully 
 * reviewthe <a 
 * href="http://developer.ebay.com/DevZone/XML/docs/WebHelp/index.htm?context=eBay_XML_API&topic=FrameCallRefPlaceOfferBP">PlaceOffer 
 * Policies and Guidelines</a>.The PlaceOffer Policies are required for use of 
 * PlaceOffer in the production environment.Please carefully write your application 
 * to follow all the PlaceOffer Policies.</b></span><br><br> <span 
 * class="tablenote"><b>Note:</b> PlaceOffer is available for evaluation by all in 
 * the Sandbox (test) environment.</span><br><br>For information about becoming 
 * authorized to use PlaceOffer in the Production environment,please contact 
 * Developer Relations, developer-relations@ebay.com.<br><br><span 
 * class="tablenote"><b>Important notes:When you use PlaceOffer to make a best 
 * offer,no affiliate-related commissions are paid.</b> Affiliate-commission 
 * functionalityis not available in the Sandbox environment. Affiliate commissions 
 * from PlaceOffer requirethat the call be made to the site on which the item is 
 * listed. Affiliate commissions fromPlaceOffer also require that the affiliate has 
 * signed up with the eBay Partner Networkfor the site on which the item is 
 * listed.</span><br><br>If you make a PlaceOffer request and eBay returns a 
 * BotBlock container, your applicationmust use the contents of the BotBlock 
 * container to show that the application-user is a human and not a 
 * bot.<br><br>Capture the contents of the BotBlock container(BotBlockUrl, 
 * BotBlockAudioUrl, and BotBlockToken) returned by PlaceOffer.The application-user 
 * must input the value for BotBlockUrl or BotBlockAudioUrl.Your application must 
 * capture this value and,in the next PlaceOffer call, include a BotBlock container 
 * (containingthe user-input value and the token you captured from the 
 * BotBlockToken field).eBay then uses your BotBlock container (in your second 
 * PlaceOffer call) to validatethat the user is a human and not a bot.<br><br>You 
 * can use GetChallengeToken to test your application's abilityto show that a 
 * PlaceOffer user is a human and not a bot.Make a GetChallengeToken request and 
 * capture ChallengeToken, ImageChallengeURL,and AudioChallengeURL. The 
 * application-user must input the value for ImageChallengeURLor AudioChallengeURL. 
 * Your application must capture this value and,in a PlaceOffer call, include a 
 * BotBlock container. The BotBlock container will containthe user-input value 
 * along with the value from ChallengeToken (from the GetChallengeToken 
 * response).eBay then uses your BotBlock container to validate that the user is a 
 * human and not a bot.<br><br>If PayPal is the required payment method, then the 
 * user making a bid or purchase must have a PayPal account.<br><br>If a user has 
 * placed a bid on an item with Bid Assistant (available on the eBay site),then a 
 * subsequent PlaceOffer call on behalf of that user, on that item, will not 
 * succeed. 
 *
 * @link http://developer.ebay.com/DevZone/XML/docs/Reference/eBay/types/PlaceOfferRequestType.html
 *
 */
class PlaceOfferRequestType extends AbstractRequestType
{
	/**
	 * @var OfferType
	 */
	protected $Offer;
	/**
	 * @var ItemIDType
	 */
	protected $ItemID;
	/**
	 * @var boolean
	 */
	protected $BlockOnWarning;
	/**
	 * @var AffiliateTrackingDetailsType
	 */
	protected $AffiliateTrackingDetails;

	/**
	 * @return OfferType
	 */
	function getOffer()
	{
		return $this->Offer;
	}
	/**
	 * @return void
	 * @param OfferType $value 
	 */
	function setOffer($value)
	{
		$this->Offer = $value;
	}
	/**
	 * @return ItemIDType
	 */
	function getItemID()
	{
		return $this->ItemID;
	}
	/**
	 * @return void
	 * @param ItemIDType $value 
	 */
	function setItemID($value)
	{
		$this->ItemID = $value;
	}
	/**
	 * @return boolean
	 */
	function getBlockOnWarning()
	{
		return $this->BlockOnWarning;
	}
	/**
	 * @return void
	 * @param boolean $value 
	 */
	function setBlockOnWarning($value)
	{
		$this->BlockOnWarning = $value;
	}
	/**
	 * @return AffiliateTrackingDetailsType
	 */
	function getAffiliateTrackingDetails()
	{
		return $this->AffiliateTrackingDetails;
	}
	/**
	 * @return void
	 * @param AffiliateTrackingDetailsType $value 
	 */
	function setAffiliateTrackingDetails($value)
	{
		$this->AffiliateTrackingDetails = $value;
	}
	/**
	 * @return 
	 */
	function __construct()
	{
		parent::__construct('PlaceOfferRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'Offer' =>
				array(
					'required' => false,
					'type' => 'OfferType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ItemID' =>
				array(
					'required' => false,
					'type' => 'ItemIDType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'BlockOnWarning' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'AffiliateTrackingDetails' =>
				array(
					'required' => false,
					'type' => 'AffiliateTrackingDetailsType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
