<?php
// autogenerated file 30.06.2008 14:46
// $Id: $
// $Log: $
//
//
require_once 'SearchStandingDashboardType.php';
require_once 'SellerFeeDiscountDashboardType.php';
require_once 'BuyerSatisfactionDashboardType.php';
require_once 'SellerAccountDashboardType.php';
require_once 'PolicyComplianceDashboardType.php';
require_once 'PowerSellerDashboardType.php';
require_once 'AbstractResponseType.php';

/**
 * Returns a brief summary of the requester's status as an eBay seller. This status 
 * information can help an eBay seller monitor their selling performance andkeep 
 * their account in good standing. 
 *
 * @link http://developer.ebay.com/DevZone/XML/docs/Reference/eBay/types/GetSellerDashboardResponseType.html
 *
 */
class GetSellerDashboardResponseType extends AbstractResponseType
{
	/**
	 * @var SearchStandingDashboardType
	 */
	protected $SearchStanding;
	/**
	 * @var SellerFeeDiscountDashboardType
	 */
	protected $SellerFeeDiscount;
	/**
	 * @var PowerSellerDashboardType
	 */
	protected $PowerSellerStatus;
	/**
	 * @var PolicyComplianceDashboardType
	 */
	protected $PolicyCompliance;
	/**
	 * @var BuyerSatisfactionDashboardType
	 */
	protected $BuyerSatisfaction;
	/**
	 * @var SellerAccountDashboardType
	 */
	protected $SellerAccount;

	/**
	 * @return SearchStandingDashboardType
	 */
	function getSearchStanding()
	{
		return $this->SearchStanding;
	}
	/**
	 * @return void
	 * @param SearchStandingDashboardType $value 
	 */
	function setSearchStanding($value)
	{
		$this->SearchStanding = $value;
	}
	/**
	 * @return SellerFeeDiscountDashboardType
	 */
	function getSellerFeeDiscount()
	{
		return $this->SellerFeeDiscount;
	}
	/**
	 * @return void
	 * @param SellerFeeDiscountDashboardType $value 
	 */
	function setSellerFeeDiscount($value)
	{
		$this->SellerFeeDiscount = $value;
	}
	/**
	 * @return PowerSellerDashboardType
	 */
	function getPowerSellerStatus()
	{
		return $this->PowerSellerStatus;
	}
	/**
	 * @return void
	 * @param PowerSellerDashboardType $value 
	 */
	function setPowerSellerStatus($value)
	{
		$this->PowerSellerStatus = $value;
	}
	/**
	 * @return PolicyComplianceDashboardType
	 */
	function getPolicyCompliance()
	{
		return $this->PolicyCompliance;
	}
	/**
	 * @return void
	 * @param PolicyComplianceDashboardType $value 
	 */
	function setPolicyCompliance($value)
	{
		$this->PolicyCompliance = $value;
	}
	/**
	 * @return BuyerSatisfactionDashboardType
	 */
	function getBuyerSatisfaction()
	{
		return $this->BuyerSatisfaction;
	}
	/**
	 * @return void
	 * @param BuyerSatisfactionDashboardType $value 
	 */
	function setBuyerSatisfaction($value)
	{
		$this->BuyerSatisfaction = $value;
	}
	/**
	 * @return SellerAccountDashboardType
	 */
	function getSellerAccount()
	{
		return $this->SellerAccount;
	}
	/**
	 * @return void
	 * @param SellerAccountDashboardType $value 
	 */
	function setSellerAccount($value)
	{
		$this->SellerAccount = $value;
	}
	/**
	 * @return 
	 */
	function __construct()
	{
		parent::__construct('GetSellerDashboardResponseType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'SearchStanding' =>
				array(
					'required' => false,
					'type' => 'SearchStandingDashboardType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SellerFeeDiscount' =>
				array(
					'required' => false,
					'type' => 'SellerFeeDiscountDashboardType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'PowerSellerStatus' =>
				array(
					'required' => false,
					'type' => 'PowerSellerDashboardType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'PolicyCompliance' =>
				array(
					'required' => false,
					'type' => 'PolicyComplianceDashboardType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'BuyerSatisfaction' =>
				array(
					'required' => false,
					'type' => 'BuyerSatisfactionDashboardType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'SellerAccount' =>
				array(
					'required' => false,
					'type' => 'SellerAccountDashboardType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
