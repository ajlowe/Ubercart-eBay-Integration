<?php
// autogenerated file 30.06.2008 14:46
// $Id: $
// $Log: $
//
//
require_once 'FeatureIDCodeType.php';
require_once 'AbstractRequestType.php';

/**
 * Returns information about certain features that are only applicable tocertain 
 * categories on the site.<p>Be sure to specify ViewAllNodes as true so that you 
 * get useful results.<br><br>GetCategoryFeatures is not designed to return 
 * settings for every leafand parent category that exists in the category tree. It 
 * only returns settingsfor nodes (sub-hierarchies) that are different from the 
 * SiteDefault,or different from a given parent category's settings. In other 
 * words,we use a "toggling" model to reduce the size of the response.For example, 
 * if the SiteDefault setting for BestOfferEnabled is false,it would mean most 
 * categories on the site don't support Best Offer,and GetCategoryFeatures would 
 * only return the few categories where thesetting for BestOfferEnabled is true (if 
 * any).</p><p>Furthermore, if all of the leaf categories under a given parent 
 * categoryhave the same settings (such as BestOfferEnabled=true),then 
 * GetCategoryFeatures only returns the highest-level parent categorywith those 
 * same settings. This means the settings of that parent category areinherited for 
 * all lower-level child categories down to the leaf categories.(In theory, it is 
 * possible for this toggling behavior to occur more thanonce as you drill down 
 * into lower levels of the tree. So you would need tocheck whether any children 
 * that override the parent's settings arealso returned.)</p><p>Use GetCategories 
 * to retrieve information about the category hierarchy(such as parent/child 
 * relationships) plus additional feature settings.</p> 
 *
 * @link http://developer.ebay.com/DevZone/XML/docs/Reference/eBay/types/GetCategoryFeaturesRequestType.html
 *
 */
class GetCategoryFeaturesRequestType extends AbstractRequestType
{
	/**
	 * @var string
	 */
	protected $CategoryID;
	/**
	 * @var int
	 */
	protected $LevelLimit;
	/**
	 * @var boolean
	 */
	protected $ViewAllNodes;
	/**
	 * @var FeatureIDCodeType
	 */
	protected $FeatureID;

	/**
	 * @return string
	 */
	function getCategoryID()
	{
		return $this->CategoryID;
	}
	/**
	 * @return void
	 * @param string $value 
	 */
	function setCategoryID($value)
	{
		$this->CategoryID = $value;
	}
	/**
	 * @return int
	 */
	function getLevelLimit()
	{
		return $this->LevelLimit;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setLevelLimit($value)
	{
		$this->LevelLimit = $value;
	}
	/**
	 * @return boolean
	 */
	function getViewAllNodes()
	{
		return $this->ViewAllNodes;
	}
	/**
	 * @return void
	 * @param boolean $value 
	 */
	function setViewAllNodes($value)
	{
		$this->ViewAllNodes = $value;
	}
	/**
	 * @return FeatureIDCodeType
	 * @param integer $index 
	 */
	function getFeatureID($index = null)
	{
		if ($index !== null) {
			return $this->FeatureID[$index];
		} else {
			return $this->FeatureID;
		}
	}
	/**
	 * @return void
	 * @param FeatureIDCodeType $value 
	 * @param  $index 
	 */
	function setFeatureID($value, $index = null)
	{
		if ($index !== null) {
			$this->FeatureID[$index] = $value;
		} else {
			$this->FeatureID = $value;
		}
	}
	/**
	 * @return void
	 * @param FeatureIDCodeType $value 
	 */
	function addFeatureID($value)
	{
		$this->FeatureID[] = $value;
	}
	/**
	 * @return 
	 */
	function __construct()
	{
		parent::__construct('GetCategoryFeaturesRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'CategoryID' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'LevelLimit' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ViewAllNodes' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'FeatureID' =>
				array(
					'required' => false,
					'type' => 'FeatureIDCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => true,
					'cardinality' => '0..*'
				)
			));

	}
}
?>
