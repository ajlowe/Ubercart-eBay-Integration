<?php
// autogenerated file 30.06.2008 14:46
// $Id: $
// $Log: $
//
//
require_once 'OrderStatusCodeType.php';
require_once 'CheckoutOrderDetailType.php';
require_once 'EbatNs_ComplexType.php';
require_once 'CartItemArrayType.php';
require_once 'AddressType.php';
require_once 'CheckoutCompleteRedirectType.php';

/**
 * Details about an eBay Express shopping cart. 
 *
 * @link http://developer.ebay.com/DevZone/XML/docs/Reference/eBay/types/CartType.html
 *
 */
class CartType extends EbatNs_ComplexType
{
	/**
	 * @var long
	 */
	protected $CartID;
	/**
	 * @var AddressType
	 */
	protected $ShippingAddress;
	/**
	 * @var OrderStatusCodeType
	 */
	protected $CartStatus;
	/**
	 * @var dateTime
	 */
	protected $CreationTime;
	/**
	 * @var dateTime
	 */
	protected $ExpirationTime;
	/**
	 * @var anyURI
	 */
	protected $CheckoutURL;
	/**
	 * @var CheckoutCompleteRedirectType
	 */
	protected $CheckoutCompleteRedirect;
	/**
	 * @var CartItemArrayType
	 */
	protected $CartItemArray;
	/**
	 * @var CheckoutOrderDetailType
	 */
	protected $OrderDetail;

	/**
	 * @return long
	 */
	function getCartID()
	{
		return $this->CartID;
	}
	/**
	 * @return void
	 * @param long $value 
	 */
	function setCartID($value)
	{
		$this->CartID = $value;
	}
	/**
	 * @return AddressType
	 */
	function getShippingAddress()
	{
		return $this->ShippingAddress;
	}
	/**
	 * @return void
	 * @param AddressType $value 
	 */
	function setShippingAddress($value)
	{
		$this->ShippingAddress = $value;
	}
	/**
	 * @return OrderStatusCodeType
	 */
	function getCartStatus()
	{
		return $this->CartStatus;
	}
	/**
	 * @return void
	 * @param OrderStatusCodeType $value 
	 */
	function setCartStatus($value)
	{
		$this->CartStatus = $value;
	}
	/**
	 * @return dateTime
	 */
	function getCreationTime()
	{
		return $this->CreationTime;
	}
	/**
	 * @return void
	 * @param dateTime $value 
	 */
	function setCreationTime($value)
	{
		$this->CreationTime = $value;
	}
	/**
	 * @return dateTime
	 */
	function getExpirationTime()
	{
		return $this->ExpirationTime;
	}
	/**
	 * @return void
	 * @param dateTime $value 
	 */
	function setExpirationTime($value)
	{
		$this->ExpirationTime = $value;
	}
	/**
	 * @return anyURI
	 */
	function getCheckoutURL()
	{
		return $this->CheckoutURL;
	}
	/**
	 * @return void
	 * @param anyURI $value 
	 */
	function setCheckoutURL($value)
	{
		$this->CheckoutURL = $value;
	}
	/**
	 * @return CheckoutCompleteRedirectType
	 */
	function getCheckoutCompleteRedirect()
	{
		return $this->CheckoutCompleteRedirect;
	}
	/**
	 * @return void
	 * @param CheckoutCompleteRedirectType $value 
	 */
	function setCheckoutCompleteRedirect($value)
	{
		$this->CheckoutCompleteRedirect = $value;
	}
	/**
	 * @return CartItemArrayType
	 */
	function getCartItemArray()
	{
		return $this->CartItemArray;
	}
	/**
	 * @return void
	 * @param CartItemArrayType $value 
	 */
	function setCartItemArray($value)
	{
		$this->CartItemArray = $value;
	}
	/**
	 * @return CheckoutOrderDetailType
	 */
	function getOrderDetail()
	{
		return $this->OrderDetail;
	}
	/**
	 * @return void
	 * @param CheckoutOrderDetailType $value 
	 */
	function setOrderDetail($value)
	{
		$this->OrderDetail = $value;
	}
	/**
	 * @return 
	 */
	function __construct()
	{
		parent::__construct('CartType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'CartID' =>
				array(
					'required' => false,
					'type' => 'long',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ShippingAddress' =>
				array(
					'required' => false,
					'type' => 'AddressType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'CartStatus' =>
				array(
					'required' => false,
					'type' => 'OrderStatusCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'CreationTime' =>
				array(
					'required' => false,
					'type' => 'dateTime',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ExpirationTime' =>
				array(
					'required' => false,
					'type' => 'dateTime',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'CheckoutURL' =>
				array(
					'required' => false,
					'type' => 'anyURI',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'CheckoutCompleteRedirect' =>
				array(
					'required' => false,
					'type' => 'CheckoutCompleteRedirectType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'CartItemArray' =>
				array(
					'required' => false,
					'type' => 'CartItemArrayType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'OrderDetail' =>
				array(
					'required' => false,
					'type' => 'CheckoutOrderDetailType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
